Nonterminals useless in grammar

   func_type


Terminals unused in grammar

   VOID
   TRUE
   FALSE
   CHARACTER


Rules useless in grammar

   65 func_type: VOID
   66          | datatype


State 14 conflicts: 9 shift/reduce
State 24 conflicts: 5 shift/reduce
State 25 conflicts: 2 shift/reduce
State 26 conflicts: 2 shift/reduce
State 79 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: func_decl SEMI S
    2  | func_defn S
    3  | stmt_list S
    4  | %empty

    5 func_decl: datatype ID LP opt_arg_list RP

    6 opt_arg_list: arg_list
    7             | %empty

    8 arg_list: arg COMMA arg_list
    9         | arg

   10 arg: datatype ID

   11 func_defn: func_decl BEGIN1 func_stmt END

   12 func_stmt: stmt func_stmt
   13          | RETURN rt SEMI
   14          | %empty

   15 rt: expr
   16   | %empty

   17 stmt_list: stmt stmt_list
   18          | stmt

   19 stmt: ID COLON ASSIGN expr SEMI
   20     | IF expr THEN stmt opt_else
   21     | WHILE expr DO stmt
   22     | BEGIN1 opt_stmt_list END
   23     | var_decl SEMI
   24     | func_call SEMI
   25     | io SEMI

   26 opt_else: else_stmt
   27         | %empty

   28 else_stmt: ELSE stmt_list

   29 expr: expr1 rel
   30     | LP expr RP

   31 rel: operator expr
   32    | %empty

   33 operator: LTE
   34         | GTE
   35         | EQU
   36         | GT
   37         | LT

   38 expr1: expr2 add_sub

   39 add_sub: PLUS expr
   40        | MINUS expr
   41        | %empty

   42 expr2: expr3 mul_div

   43 mul_div: TIMES expr
   44        | DIV expr
   45        | %empty

   46 expr3: NEGATION expr
   47      | term

   48 term: ID
   49     | NUM

   50 opt_stmt_list: stmt_list
   51              | %empty

   52 var_decl: datatype id_list

   53 id_list: ID COMMA id_list
   54        | ID

   55 datatype: INT
   56         | BOOL
   57         | CHAR

   58 func_call: ID LP opt_expr_list RP

   59 opt_expr_list: expr_list
   60              | %empty

   61 expr_list: expr COMMA expr_list
   62          | expr

   63 io: CIN GG ID
   64   | COUT LL ID


Terminals, with rules where they appear

$end (0) 0
error (256)
NEGATION (258) 46
PLUS (259) 39
MINUS (260) 40
TIMES (261) 43
DIV (262) 44
LTE (263) 33
GTE (264) 34
LT (265) 37
GT (266) 36
EQU (267) 35
ASSIGN (268) 19
SEMI (269) 1 13 19 23 24 25
COMMA (270) 8 53 61
COLON (271) 19
LP (272) 5 30 58
RP (273) 5 30 58
NUM (274) 49
IF (275) 20
THEN (276) 20
ELSE (277) 28
WHILE (278) 21
DO (279) 21
BEGIN1 (280) 11 22
END (281) 11 22
INT (282) 55
BOOL (283) 56
CHAR (284) 57
VOID (285)
TRUE (286)
FALSE (287)
CHARACTER (288)
CIN (289) 63
COUT (290) 64
ID (291) 5 10 19 48 53 54 58 63 64
LL (292) 64
GG (293) 63
RETURN (294) 13


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
S (41)
    on left: 1 2 3 4, on right: 0 1 2 3
func_decl (42)
    on left: 5, on right: 1 11
opt_arg_list (43)
    on left: 6 7, on right: 5
arg_list (44)
    on left: 8 9, on right: 6 8
arg (45)
    on left: 10, on right: 8 9
func_defn (46)
    on left: 11, on right: 2
func_stmt (47)
    on left: 12 13 14, on right: 11 12
rt (48)
    on left: 15 16, on right: 13
stmt_list (49)
    on left: 17 18, on right: 3 17 28 50
stmt (50)
    on left: 19 20 21 22 23 24 25, on right: 12 17 18 20 21
opt_else (51)
    on left: 26 27, on right: 20
else_stmt (52)
    on left: 28, on right: 26
expr (53)
    on left: 29 30, on right: 15 19 20 21 30 31 39 40 43 44 46 61 62
rel (54)
    on left: 31 32, on right: 29
operator (55)
    on left: 33 34 35 36 37, on right: 31
expr1 (56)
    on left: 38, on right: 29
add_sub (57)
    on left: 39 40 41, on right: 38
expr2 (58)
    on left: 42, on right: 38
mul_div (59)
    on left: 43 44 45, on right: 42
expr3 (60)
    on left: 46 47, on right: 42
term (61)
    on left: 48 49, on right: 47
opt_stmt_list (62)
    on left: 50 51, on right: 22
var_decl (63)
    on left: 52, on right: 23
id_list (64)
    on left: 53 54, on right: 52 53
datatype (65)
    on left: 55 56 57, on right: 5 10 52
func_call (66)
    on left: 58, on right: 24
opt_expr_list (67)
    on left: 59 60, on right: 58
expr_list (68)
    on left: 61 62, on right: 59 61
io (69)
    on left: 63 64, on right: 25


State 0

    0 $accept: . S $end

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 10
    func_decl  go to state 11
    func_defn  go to state 12
    stmt_list  go to state 13
    stmt       go to state 14
    var_decl   go to state 15
    datatype   go to state 16
    func_call  go to state 17
    io         go to state 18


State 1

   20 stmt: IF . expr THEN stmt opt_else

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 23
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 2

   21 stmt: WHILE . expr DO stmt

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 28
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 3

   22 stmt: BEGIN1 . opt_stmt_list END

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 51 (opt_stmt_list)

    stmt_list      go to state 29
    stmt           go to state 14
    opt_stmt_list  go to state 30
    var_decl       go to state 15
    datatype       go to state 31
    func_call      go to state 17
    io             go to state 18


State 4

   55 datatype: INT .

    $default  reduce using rule 55 (datatype)


State 5

   56 datatype: BOOL .

    $default  reduce using rule 56 (datatype)


State 6

   57 datatype: CHAR .

    $default  reduce using rule 57 (datatype)


State 7

   63 io: CIN . GG ID

    GG  shift, and go to state 32


State 8

   64 io: COUT . LL ID

    LL  shift, and go to state 33


State 9

   19 stmt: ID . COLON ASSIGN expr SEMI
   58 func_call: ID . LP opt_expr_list RP

    COLON  shift, and go to state 34
    LP     shift, and go to state 35


State 10

    0 $accept: S . $end

    $end  shift, and go to state 36


State 11

    1 S: func_decl . SEMI S
   11 func_defn: func_decl . BEGIN1 func_stmt END

    SEMI    shift, and go to state 37
    BEGIN1  shift, and go to state 38


State 12

    2 S: func_defn . S

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 39
    func_decl  go to state 11
    func_defn  go to state 12
    stmt_list  go to state 13
    stmt       go to state 14
    var_decl   go to state 15
    datatype   go to state 16
    func_call  go to state 17
    io         go to state 18


State 13

    3 S: stmt_list . S

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 40
    func_decl  go to state 11
    func_defn  go to state 12
    stmt_list  go to state 13
    stmt       go to state 14
    var_decl   go to state 15
    datatype   go to state 16
    func_call  go to state 17
    io         go to state 18


State 14

   17 stmt_list: stmt . stmt_list
   18          | stmt .

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    IF        [reduce using rule 18 (stmt_list)]
    WHILE     [reduce using rule 18 (stmt_list)]
    BEGIN1    [reduce using rule 18 (stmt_list)]
    INT       [reduce using rule 18 (stmt_list)]
    BOOL      [reduce using rule 18 (stmt_list)]
    CHAR      [reduce using rule 18 (stmt_list)]
    CIN       [reduce using rule 18 (stmt_list)]
    COUT      [reduce using rule 18 (stmt_list)]
    ID        [reduce using rule 18 (stmt_list)]
    $default  reduce using rule 18 (stmt_list)

    stmt_list  go to state 41
    stmt       go to state 14
    var_decl   go to state 15
    datatype   go to state 31
    func_call  go to state 17
    io         go to state 18


State 15

   23 stmt: var_decl . SEMI

    SEMI  shift, and go to state 42


State 16

    5 func_decl: datatype . ID LP opt_arg_list RP
   52 var_decl: datatype . id_list

    ID  shift, and go to state 43

    id_list  go to state 44


State 17

   24 stmt: func_call . SEMI

    SEMI  shift, and go to state 45


State 18

   25 stmt: io . SEMI

    SEMI  shift, and go to state 46


State 19

   46 expr3: NEGATION . expr

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 47
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 20

   30 expr: LP . expr RP

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 48
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 21

   49 term: NUM .

    $default  reduce using rule 49 (term)


State 22

   48 term: ID .

    $default  reduce using rule 48 (term)


State 23

   20 stmt: IF expr . THEN stmt opt_else

    THEN  shift, and go to state 49


State 24

   29 expr: expr1 . rel

    LTE  shift, and go to state 50
    GTE  shift, and go to state 51
    LT   shift, and go to state 52
    GT   shift, and go to state 53
    EQU  shift, and go to state 54

    LTE       [reduce using rule 32 (rel)]
    GTE       [reduce using rule 32 (rel)]
    LT        [reduce using rule 32 (rel)]
    GT        [reduce using rule 32 (rel)]
    EQU       [reduce using rule 32 (rel)]
    $default  reduce using rule 32 (rel)

    rel       go to state 55
    operator  go to state 56


State 25

   38 expr1: expr2 . add_sub

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58

    PLUS      [reduce using rule 41 (add_sub)]
    MINUS     [reduce using rule 41 (add_sub)]
    $default  reduce using rule 41 (add_sub)

    add_sub  go to state 59


State 26

   42 expr2: expr3 . mul_div

    TIMES  shift, and go to state 60
    DIV    shift, and go to state 61

    TIMES     [reduce using rule 45 (mul_div)]
    DIV       [reduce using rule 45 (mul_div)]
    $default  reduce using rule 45 (mul_div)

    mul_div  go to state 62


State 27

   47 expr3: term .

    $default  reduce using rule 47 (expr3)


State 28

   21 stmt: WHILE expr . DO stmt

    DO  shift, and go to state 63


State 29

   50 opt_stmt_list: stmt_list .

    $default  reduce using rule 50 (opt_stmt_list)


State 30

   22 stmt: BEGIN1 opt_stmt_list . END

    END  shift, and go to state 64


State 31

   52 var_decl: datatype . id_list

    ID  shift, and go to state 65

    id_list  go to state 44


State 32

   63 io: CIN GG . ID

    ID  shift, and go to state 66


State 33

   64 io: COUT LL . ID

    ID  shift, and go to state 67


State 34

   19 stmt: ID COLON . ASSIGN expr SEMI

    ASSIGN  shift, and go to state 68


State 35

   58 func_call: ID LP . opt_expr_list RP

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    $default  reduce using rule 60 (opt_expr_list)

    expr           go to state 69
    expr1          go to state 24
    expr2          go to state 25
    expr3          go to state 26
    term           go to state 27
    opt_expr_list  go to state 70
    expr_list      go to state 71


State 36

    0 $accept: S $end .

    $default  accept


State 37

    1 S: func_decl SEMI . S

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 72
    func_decl  go to state 11
    func_defn  go to state 12
    stmt_list  go to state 13
    stmt       go to state 14
    var_decl   go to state 15
    datatype   go to state 16
    func_call  go to state 17
    io         go to state 18


State 38

   11 func_defn: func_decl BEGIN1 . func_stmt END

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9
    RETURN  shift, and go to state 73

    $default  reduce using rule 14 (func_stmt)

    func_stmt  go to state 74
    stmt       go to state 75
    var_decl   go to state 15
    datatype   go to state 31
    func_call  go to state 17
    io         go to state 18


State 39

    2 S: func_defn S .

    $default  reduce using rule 2 (S)


State 40

    3 S: stmt_list S .

    $default  reduce using rule 3 (S)


State 41

   17 stmt_list: stmt stmt_list .

    $default  reduce using rule 17 (stmt_list)


State 42

   23 stmt: var_decl SEMI .

    $default  reduce using rule 23 (stmt)


State 43

    5 func_decl: datatype ID . LP opt_arg_list RP
   53 id_list: ID . COMMA id_list
   54        | ID .

    COMMA  shift, and go to state 76
    LP     shift, and go to state 77

    $default  reduce using rule 54 (id_list)


State 44

   52 var_decl: datatype id_list .

    $default  reduce using rule 52 (var_decl)


State 45

   24 stmt: func_call SEMI .

    $default  reduce using rule 24 (stmt)


State 46

   25 stmt: io SEMI .

    $default  reduce using rule 25 (stmt)


State 47

   46 expr3: NEGATION expr .

    $default  reduce using rule 46 (expr3)


State 48

   30 expr: LP expr . RP

    RP  shift, and go to state 78


State 49

   20 stmt: IF expr THEN . stmt opt_else

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    stmt       go to state 79
    var_decl   go to state 15
    datatype   go to state 31
    func_call  go to state 17
    io         go to state 18


State 50

   33 operator: LTE .

    $default  reduce using rule 33 (operator)


State 51

   34 operator: GTE .

    $default  reduce using rule 34 (operator)


State 52

   37 operator: LT .

    $default  reduce using rule 37 (operator)


State 53

   36 operator: GT .

    $default  reduce using rule 36 (operator)


State 54

   35 operator: EQU .

    $default  reduce using rule 35 (operator)


State 55

   29 expr: expr1 rel .

    $default  reduce using rule 29 (expr)


State 56

   31 rel: operator . expr

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 80
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 57

   39 add_sub: PLUS . expr

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 81
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 58

   40 add_sub: MINUS . expr

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 82
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 59

   38 expr1: expr2 add_sub .

    $default  reduce using rule 38 (expr1)


State 60

   43 mul_div: TIMES . expr

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 83
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 61

   44 mul_div: DIV . expr

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 84
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 62

   42 expr2: expr3 mul_div .

    $default  reduce using rule 42 (expr2)


State 63

   21 stmt: WHILE expr DO . stmt

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    stmt       go to state 85
    var_decl   go to state 15
    datatype   go to state 31
    func_call  go to state 17
    io         go to state 18


State 64

   22 stmt: BEGIN1 opt_stmt_list END .

    $default  reduce using rule 22 (stmt)


State 65

   53 id_list: ID . COMMA id_list
   54        | ID .

    COMMA  shift, and go to state 76

    $default  reduce using rule 54 (id_list)


State 66

   63 io: CIN GG ID .

    $default  reduce using rule 63 (io)


State 67

   64 io: COUT LL ID .

    $default  reduce using rule 64 (io)


State 68

   19 stmt: ID COLON ASSIGN . expr SEMI

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr   go to state 86
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 69

   61 expr_list: expr . COMMA expr_list
   62          | expr .

    COMMA  shift, and go to state 87

    $default  reduce using rule 62 (expr_list)


State 70

   58 func_call: ID LP opt_expr_list . RP

    RP  shift, and go to state 88


State 71

   59 opt_expr_list: expr_list .

    $default  reduce using rule 59 (opt_expr_list)


State 72

    1 S: func_decl SEMI S .

    $default  reduce using rule 1 (S)


State 73

   13 func_stmt: RETURN . rt SEMI

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    $default  reduce using rule 16 (rt)

    rt     go to state 89
    expr   go to state 90
    expr1  go to state 24
    expr2  go to state 25
    expr3  go to state 26
    term   go to state 27


State 74

   11 func_defn: func_decl BEGIN1 func_stmt . END

    END  shift, and go to state 91


State 75

   12 func_stmt: stmt . func_stmt

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9
    RETURN  shift, and go to state 73

    $default  reduce using rule 14 (func_stmt)

    func_stmt  go to state 92
    stmt       go to state 75
    var_decl   go to state 15
    datatype   go to state 31
    func_call  go to state 17
    io         go to state 18


State 76

   53 id_list: ID COMMA . id_list

    ID  shift, and go to state 65

    id_list  go to state 93


State 77

    5 func_decl: datatype ID LP . opt_arg_list RP

    INT   shift, and go to state 4
    BOOL  shift, and go to state 5
    CHAR  shift, and go to state 6

    $default  reduce using rule 7 (opt_arg_list)

    opt_arg_list  go to state 94
    arg_list      go to state 95
    arg           go to state 96
    datatype      go to state 97


State 78

   30 expr: LP expr RP .

    $default  reduce using rule 30 (expr)


State 79

   20 stmt: IF expr THEN stmt . opt_else

    ELSE  shift, and go to state 98

    ELSE      [reduce using rule 27 (opt_else)]
    $default  reduce using rule 27 (opt_else)

    opt_else   go to state 99
    else_stmt  go to state 100


State 80

   31 rel: operator expr .

    $default  reduce using rule 31 (rel)


State 81

   39 add_sub: PLUS expr .

    $default  reduce using rule 39 (add_sub)


State 82

   40 add_sub: MINUS expr .

    $default  reduce using rule 40 (add_sub)


State 83

   43 mul_div: TIMES expr .

    $default  reduce using rule 43 (mul_div)


State 84

   44 mul_div: DIV expr .

    $default  reduce using rule 44 (mul_div)


State 85

   21 stmt: WHILE expr DO stmt .

    $default  reduce using rule 21 (stmt)


State 86

   19 stmt: ID COLON ASSIGN expr . SEMI

    SEMI  shift, and go to state 101


State 87

   61 expr_list: expr COMMA . expr_list

    NEGATION  shift, and go to state 19
    LP        shift, and go to state 20
    NUM       shift, and go to state 21
    ID        shift, and go to state 22

    expr       go to state 69
    expr1      go to state 24
    expr2      go to state 25
    expr3      go to state 26
    term       go to state 27
    expr_list  go to state 102


State 88

   58 func_call: ID LP opt_expr_list RP .

    $default  reduce using rule 58 (func_call)


State 89

   13 func_stmt: RETURN rt . SEMI

    SEMI  shift, and go to state 103


State 90

   15 rt: expr .

    $default  reduce using rule 15 (rt)


State 91

   11 func_defn: func_decl BEGIN1 func_stmt END .

    $default  reduce using rule 11 (func_defn)


State 92

   12 func_stmt: stmt func_stmt .

    $default  reduce using rule 12 (func_stmt)


State 93

   53 id_list: ID COMMA id_list .

    $default  reduce using rule 53 (id_list)


State 94

    5 func_decl: datatype ID LP opt_arg_list . RP

    RP  shift, and go to state 104


State 95

    6 opt_arg_list: arg_list .

    $default  reduce using rule 6 (opt_arg_list)


State 96

    8 arg_list: arg . COMMA arg_list
    9         | arg .

    COMMA  shift, and go to state 105

    $default  reduce using rule 9 (arg_list)


State 97

   10 arg: datatype . ID

    ID  shift, and go to state 106


State 98

   28 else_stmt: ELSE . stmt_list

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    stmt_list  go to state 107
    stmt       go to state 14
    var_decl   go to state 15
    datatype   go to state 31
    func_call  go to state 17
    io         go to state 18


State 99

   20 stmt: IF expr THEN stmt opt_else .

    $default  reduce using rule 20 (stmt)


State 100

   26 opt_else: else_stmt .

    $default  reduce using rule 26 (opt_else)


State 101

   19 stmt: ID COLON ASSIGN expr SEMI .

    $default  reduce using rule 19 (stmt)


State 102

   61 expr_list: expr COMMA expr_list .

    $default  reduce using rule 61 (expr_list)


State 103

   13 func_stmt: RETURN rt SEMI .

    $default  reduce using rule 13 (func_stmt)


State 104

    5 func_decl: datatype ID LP opt_arg_list RP .

    $default  reduce using rule 5 (func_decl)


State 105

    8 arg_list: arg COMMA . arg_list

    INT   shift, and go to state 4
    BOOL  shift, and go to state 5
    CHAR  shift, and go to state 6

    arg_list  go to state 108
    arg       go to state 96
    datatype  go to state 97


State 106

   10 arg: datatype ID .

    $default  reduce using rule 10 (arg)


State 107

   28 else_stmt: ELSE stmt_list .

    $default  reduce using rule 28 (else_stmt)


State 108

    8 arg_list: arg COMMA arg_list .

    $default  reduce using rule 8 (arg_list)
