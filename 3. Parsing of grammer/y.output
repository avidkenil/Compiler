Nonterminals useless in grammar

   func_type


Terminals unused in grammar

   VOID
   TRUE
   FALSE
   CHARACTER


Rules useless in grammar

   69 func_type: VOID
   70          | datatype


State 23 conflicts: 5 shift/reduce
State 24 conflicts: 2 shift/reduce
State 25 conflicts: 2 shift/reduce
State 29 conflicts: 9 shift/reduce
State 83 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: func_defn S
    2  | func_decl semi S
    3  | stmt S
    4  | %empty

    5 func_decl: datatype ID LP opt_arg_list RP

    6 opt_arg_list: arg_list
    7             | %empty

    8 arg_list: arg COMMA arg_list
    9         | arg

   10 arg: datatype ID

   11 func_defn: func_decl BEGIN1 func_stmt END

   12 func_stmt: stmt func_stmt
   13          | RETURN rt semi
   14          | %empty

   15 rt: expr
   16   | %empty

   17 stmt_list: stmt stmt_list
   18          | stmt

   19 stmt: ID colon ASSIGN expr semi
   20     | IF expr THEN stmt opt_else
   21     | WHILE expr DO stmt
   22     | BEGIN1 opt_stmt_list END
   23     | var_decl semi
   24     | func_call semi
   25     | io semi

   26 opt_else: else_stmt
   27         | %empty

   28 else_stmt: ELSE stmt_list

   29 expr: expr1 rel
   30     | LP expr RP

   31 rel: operator expr
   32    | %empty

   33 operator: LTE
   34         | GTE
   35         | EQU
   36         | GT
   37         | LT

   38 expr1: expr2 add_sub

   39 add_sub: PLUS expr
   40        | MINUS expr
   41        | %empty

   42 expr2: expr3 mul_div

   43 mul_div: TIMES expr
   44        | DIV expr
   45        | %empty

   46 expr3: NEGATION expr
   47      | term

   48 term: ID
   49     | NUM

   50 opt_stmt_list: stmt_list
   51              | %empty

   52 var_decl: datatype id_list

   53 id_list: ID COMMA id_list
   54        | ID

   55 datatype: INT
   56         | BOOL
   57         | CHAR

   58 func_call: ID LP opt_expr_list RP

   59 opt_expr_list: expr_list
   60              | %empty

   61 expr_list: expr COMMA expr_list
   62          | expr

   63 io: CIN GG ID
   64   | COUT LL ID

   65 colon: COLON
   66      | error

   67 semi: SEMI
   68     | error


Terminals, with rules where they appear

$end (0) 0
error (256) 66 68
NEGATION (258) 46
PLUS (259) 39
MINUS (260) 40
TIMES (261) 43
DIV (262) 44
LTE (263) 33
GTE (264) 34
LT (265) 37
GT (266) 36
EQU (267) 35
ASSIGN (268) 19
SEMI (269) 67
COMMA (270) 8 53 61
COLON (271) 65
LP (272) 5 30 58
RP (273) 5 30 58
NUM (274) 49
IF (275) 20
THEN (276) 20
ELSE (277) 28
WHILE (278) 21
DO (279) 21
BEGIN1 (280) 11 22
END (281) 11 22
INT (282) 55
BOOL (283) 56
CHAR (284) 57
VOID (285)
TRUE (286)
FALSE (287)
CHARACTER (288)
CIN (289) 63
COUT (290) 64
ID (291) 5 10 19 48 53 54 58 63 64
LL (292) 64
GG (293) 63
RETURN (294) 13


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
S (41)
    on left: 1 2 3 4, on right: 0 1 2 3
func_decl (42)
    on left: 5, on right: 2 11
opt_arg_list (43)
    on left: 6 7, on right: 5
arg_list (44)
    on left: 8 9, on right: 6 8
arg (45)
    on left: 10, on right: 8 9
func_defn (46)
    on left: 11, on right: 1
func_stmt (47)
    on left: 12 13 14, on right: 11 12
rt (48)
    on left: 15 16, on right: 13
stmt_list (49)
    on left: 17 18, on right: 17 28 50
stmt (50)
    on left: 19 20 21 22 23 24 25, on right: 3 12 17 18 20 21
opt_else (51)
    on left: 26 27, on right: 20
else_stmt (52)
    on left: 28, on right: 26
expr (53)
    on left: 29 30, on right: 15 19 20 21 30 31 39 40 43 44 46 61 62
rel (54)
    on left: 31 32, on right: 29
operator (55)
    on left: 33 34 35 36 37, on right: 31
expr1 (56)
    on left: 38, on right: 29
add_sub (57)
    on left: 39 40 41, on right: 38
expr2 (58)
    on left: 42, on right: 38
mul_div (59)
    on left: 43 44 45, on right: 42
expr3 (60)
    on left: 46 47, on right: 42
term (61)
    on left: 48 49, on right: 47
opt_stmt_list (62)
    on left: 50 51, on right: 22
var_decl (63)
    on left: 52, on right: 23
id_list (64)
    on left: 53 54, on right: 52 53
datatype (65)
    on left: 55 56 57, on right: 5 10 52
func_call (66)
    on left: 58, on right: 24
opt_expr_list (67)
    on left: 59 60, on right: 58
expr_list (68)
    on left: 61 62, on right: 59 61
io (69)
    on left: 63 64, on right: 25
colon (70)
    on left: 65 66, on right: 19
semi (71)
    on left: 67 68, on right: 2 13 19 23 24 25


State 0

    0 $accept: . S $end

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 10
    func_decl  go to state 11
    func_defn  go to state 12
    stmt       go to state 13
    var_decl   go to state 14
    datatype   go to state 15
    func_call  go to state 16
    io         go to state 17


State 1

   20 stmt: IF . expr THEN stmt opt_else

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 22
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 2

   21 stmt: WHILE . expr DO stmt

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 27
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 3

   22 stmt: BEGIN1 . opt_stmt_list END

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 51 (opt_stmt_list)

    stmt_list      go to state 28
    stmt           go to state 29
    opt_stmt_list  go to state 30
    var_decl       go to state 14
    datatype       go to state 31
    func_call      go to state 16
    io             go to state 17


State 4

   55 datatype: INT .

    $default  reduce using rule 55 (datatype)


State 5

   56 datatype: BOOL .

    $default  reduce using rule 56 (datatype)


State 6

   57 datatype: CHAR .

    $default  reduce using rule 57 (datatype)


State 7

   63 io: CIN . GG ID

    GG  shift, and go to state 32


State 8

   64 io: COUT . LL ID

    LL  shift, and go to state 33


State 9

   19 stmt: ID . colon ASSIGN expr semi
   58 func_call: ID . LP opt_expr_list RP

    error  shift, and go to state 34
    COLON  shift, and go to state 35
    LP     shift, and go to state 36

    colon  go to state 37


State 10

    0 $accept: S . $end

    $end  shift, and go to state 38


State 11

    2 S: func_decl . semi S
   11 func_defn: func_decl . BEGIN1 func_stmt END

    error   shift, and go to state 39
    SEMI    shift, and go to state 40
    BEGIN1  shift, and go to state 41

    semi  go to state 42


State 12

    1 S: func_defn . S

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 43
    func_decl  go to state 11
    func_defn  go to state 12
    stmt       go to state 13
    var_decl   go to state 14
    datatype   go to state 15
    func_call  go to state 16
    io         go to state 17


State 13

    3 S: stmt . S

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 44
    func_decl  go to state 11
    func_defn  go to state 12
    stmt       go to state 13
    var_decl   go to state 14
    datatype   go to state 15
    func_call  go to state 16
    io         go to state 17


State 14

   23 stmt: var_decl . semi

    error  shift, and go to state 39
    SEMI   shift, and go to state 40

    semi  go to state 45


State 15

    5 func_decl: datatype . ID LP opt_arg_list RP
   52 var_decl: datatype . id_list

    ID  shift, and go to state 46

    id_list  go to state 47


State 16

   24 stmt: func_call . semi

    error  shift, and go to state 39
    SEMI   shift, and go to state 40

    semi  go to state 48


State 17

   25 stmt: io . semi

    error  shift, and go to state 39
    SEMI   shift, and go to state 40

    semi  go to state 49


State 18

   46 expr3: NEGATION . expr

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 50
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 19

   30 expr: LP . expr RP

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 51
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 20

   49 term: NUM .

    $default  reduce using rule 49 (term)


State 21

   48 term: ID .

    $default  reduce using rule 48 (term)


State 22

   20 stmt: IF expr . THEN stmt opt_else

    THEN  shift, and go to state 52


State 23

   29 expr: expr1 . rel

    LTE  shift, and go to state 53
    GTE  shift, and go to state 54
    LT   shift, and go to state 55
    GT   shift, and go to state 56
    EQU  shift, and go to state 57

    LTE       [reduce using rule 32 (rel)]
    GTE       [reduce using rule 32 (rel)]
    LT        [reduce using rule 32 (rel)]
    GT        [reduce using rule 32 (rel)]
    EQU       [reduce using rule 32 (rel)]
    $default  reduce using rule 32 (rel)

    rel       go to state 58
    operator  go to state 59


State 24

   38 expr1: expr2 . add_sub

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    PLUS      [reduce using rule 41 (add_sub)]
    MINUS     [reduce using rule 41 (add_sub)]
    $default  reduce using rule 41 (add_sub)

    add_sub  go to state 62


State 25

   42 expr2: expr3 . mul_div

    TIMES  shift, and go to state 63
    DIV    shift, and go to state 64

    TIMES     [reduce using rule 45 (mul_div)]
    DIV       [reduce using rule 45 (mul_div)]
    $default  reduce using rule 45 (mul_div)

    mul_div  go to state 65


State 26

   47 expr3: term .

    $default  reduce using rule 47 (expr3)


State 27

   21 stmt: WHILE expr . DO stmt

    DO  shift, and go to state 66


State 28

   50 opt_stmt_list: stmt_list .

    $default  reduce using rule 50 (opt_stmt_list)


State 29

   17 stmt_list: stmt . stmt_list
   18          | stmt .

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    IF        [reduce using rule 18 (stmt_list)]
    WHILE     [reduce using rule 18 (stmt_list)]
    BEGIN1    [reduce using rule 18 (stmt_list)]
    INT       [reduce using rule 18 (stmt_list)]
    BOOL      [reduce using rule 18 (stmt_list)]
    CHAR      [reduce using rule 18 (stmt_list)]
    CIN       [reduce using rule 18 (stmt_list)]
    COUT      [reduce using rule 18 (stmt_list)]
    ID        [reduce using rule 18 (stmt_list)]
    $default  reduce using rule 18 (stmt_list)

    stmt_list  go to state 67
    stmt       go to state 29
    var_decl   go to state 14
    datatype   go to state 31
    func_call  go to state 16
    io         go to state 17


State 30

   22 stmt: BEGIN1 opt_stmt_list . END

    END  shift, and go to state 68


State 31

   52 var_decl: datatype . id_list

    ID  shift, and go to state 69

    id_list  go to state 47


State 32

   63 io: CIN GG . ID

    ID  shift, and go to state 70


State 33

   64 io: COUT LL . ID

    ID  shift, and go to state 71


State 34

   66 colon: error .

    $default  reduce using rule 66 (colon)


State 35

   65 colon: COLON .

    $default  reduce using rule 65 (colon)


State 36

   58 func_call: ID LP . opt_expr_list RP

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    $default  reduce using rule 60 (opt_expr_list)

    expr           go to state 72
    expr1          go to state 23
    expr2          go to state 24
    expr3          go to state 25
    term           go to state 26
    opt_expr_list  go to state 73
    expr_list      go to state 74


State 37

   19 stmt: ID colon . ASSIGN expr semi

    ASSIGN  shift, and go to state 75


State 38

    0 $accept: S $end .

    $default  accept


State 39

   68 semi: error .

    $default  reduce using rule 68 (semi)


State 40

   67 semi: SEMI .

    $default  reduce using rule 67 (semi)


State 41

   11 func_defn: func_decl BEGIN1 . func_stmt END

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9
    RETURN  shift, and go to state 76

    $default  reduce using rule 14 (func_stmt)

    func_stmt  go to state 77
    stmt       go to state 78
    var_decl   go to state 14
    datatype   go to state 31
    func_call  go to state 16
    io         go to state 17


State 42

    2 S: func_decl semi . S

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    $default  reduce using rule 4 (S)

    S          go to state 79
    func_decl  go to state 11
    func_defn  go to state 12
    stmt       go to state 13
    var_decl   go to state 14
    datatype   go to state 15
    func_call  go to state 16
    io         go to state 17


State 43

    1 S: func_defn S .

    $default  reduce using rule 1 (S)


State 44

    3 S: stmt S .

    $default  reduce using rule 3 (S)


State 45

   23 stmt: var_decl semi .

    $default  reduce using rule 23 (stmt)


State 46

    5 func_decl: datatype ID . LP opt_arg_list RP
   53 id_list: ID . COMMA id_list
   54        | ID .

    COMMA  shift, and go to state 80
    LP     shift, and go to state 81

    $default  reduce using rule 54 (id_list)


State 47

   52 var_decl: datatype id_list .

    $default  reduce using rule 52 (var_decl)


State 48

   24 stmt: func_call semi .

    $default  reduce using rule 24 (stmt)


State 49

   25 stmt: io semi .

    $default  reduce using rule 25 (stmt)


State 50

   46 expr3: NEGATION expr .

    $default  reduce using rule 46 (expr3)


State 51

   30 expr: LP expr . RP

    RP  shift, and go to state 82


State 52

   20 stmt: IF expr THEN . stmt opt_else

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    stmt       go to state 83
    var_decl   go to state 14
    datatype   go to state 31
    func_call  go to state 16
    io         go to state 17


State 53

   33 operator: LTE .

    $default  reduce using rule 33 (operator)


State 54

   34 operator: GTE .

    $default  reduce using rule 34 (operator)


State 55

   37 operator: LT .

    $default  reduce using rule 37 (operator)


State 56

   36 operator: GT .

    $default  reduce using rule 36 (operator)


State 57

   35 operator: EQU .

    $default  reduce using rule 35 (operator)


State 58

   29 expr: expr1 rel .

    $default  reduce using rule 29 (expr)


State 59

   31 rel: operator . expr

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 84
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 60

   39 add_sub: PLUS . expr

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 85
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 61

   40 add_sub: MINUS . expr

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 86
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 62

   38 expr1: expr2 add_sub .

    $default  reduce using rule 38 (expr1)


State 63

   43 mul_div: TIMES . expr

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 87
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 64

   44 mul_div: DIV . expr

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 88
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 65

   42 expr2: expr3 mul_div .

    $default  reduce using rule 42 (expr2)


State 66

   21 stmt: WHILE expr DO . stmt

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    stmt       go to state 89
    var_decl   go to state 14
    datatype   go to state 31
    func_call  go to state 16
    io         go to state 17


State 67

   17 stmt_list: stmt stmt_list .

    $default  reduce using rule 17 (stmt_list)


State 68

   22 stmt: BEGIN1 opt_stmt_list END .

    $default  reduce using rule 22 (stmt)


State 69

   53 id_list: ID . COMMA id_list
   54        | ID .

    COMMA  shift, and go to state 80

    $default  reduce using rule 54 (id_list)


State 70

   63 io: CIN GG ID .

    $default  reduce using rule 63 (io)


State 71

   64 io: COUT LL ID .

    $default  reduce using rule 64 (io)


State 72

   61 expr_list: expr . COMMA expr_list
   62          | expr .

    COMMA  shift, and go to state 90

    $default  reduce using rule 62 (expr_list)


State 73

   58 func_call: ID LP opt_expr_list . RP

    RP  shift, and go to state 91


State 74

   59 opt_expr_list: expr_list .

    $default  reduce using rule 59 (opt_expr_list)


State 75

   19 stmt: ID colon ASSIGN . expr semi

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr   go to state 92
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 76

   13 func_stmt: RETURN . rt semi

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    $default  reduce using rule 16 (rt)

    rt     go to state 93
    expr   go to state 94
    expr1  go to state 23
    expr2  go to state 24
    expr3  go to state 25
    term   go to state 26


State 77

   11 func_defn: func_decl BEGIN1 func_stmt . END

    END  shift, and go to state 95


State 78

   12 func_stmt: stmt . func_stmt

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9
    RETURN  shift, and go to state 76

    $default  reduce using rule 14 (func_stmt)

    func_stmt  go to state 96
    stmt       go to state 78
    var_decl   go to state 14
    datatype   go to state 31
    func_call  go to state 16
    io         go to state 17


State 79

    2 S: func_decl semi S .

    $default  reduce using rule 2 (S)


State 80

   53 id_list: ID COMMA . id_list

    ID  shift, and go to state 69

    id_list  go to state 97


State 81

    5 func_decl: datatype ID LP . opt_arg_list RP

    INT   shift, and go to state 4
    BOOL  shift, and go to state 5
    CHAR  shift, and go to state 6

    $default  reduce using rule 7 (opt_arg_list)

    opt_arg_list  go to state 98
    arg_list      go to state 99
    arg           go to state 100
    datatype      go to state 101


State 82

   30 expr: LP expr RP .

    $default  reduce using rule 30 (expr)


State 83

   20 stmt: IF expr THEN stmt . opt_else

    ELSE  shift, and go to state 102

    ELSE      [reduce using rule 27 (opt_else)]
    $default  reduce using rule 27 (opt_else)

    opt_else   go to state 103
    else_stmt  go to state 104


State 84

   31 rel: operator expr .

    $default  reduce using rule 31 (rel)


State 85

   39 add_sub: PLUS expr .

    $default  reduce using rule 39 (add_sub)


State 86

   40 add_sub: MINUS expr .

    $default  reduce using rule 40 (add_sub)


State 87

   43 mul_div: TIMES expr .

    $default  reduce using rule 43 (mul_div)


State 88

   44 mul_div: DIV expr .

    $default  reduce using rule 44 (mul_div)


State 89

   21 stmt: WHILE expr DO stmt .

    $default  reduce using rule 21 (stmt)


State 90

   61 expr_list: expr COMMA . expr_list

    NEGATION  shift, and go to state 18
    LP        shift, and go to state 19
    NUM       shift, and go to state 20
    ID        shift, and go to state 21

    expr       go to state 72
    expr1      go to state 23
    expr2      go to state 24
    expr3      go to state 25
    term       go to state 26
    expr_list  go to state 105


State 91

   58 func_call: ID LP opt_expr_list RP .

    $default  reduce using rule 58 (func_call)


State 92

   19 stmt: ID colon ASSIGN expr . semi

    error  shift, and go to state 39
    SEMI   shift, and go to state 40

    semi  go to state 106


State 93

   13 func_stmt: RETURN rt . semi

    error  shift, and go to state 39
    SEMI   shift, and go to state 40

    semi  go to state 107


State 94

   15 rt: expr .

    $default  reduce using rule 15 (rt)


State 95

   11 func_defn: func_decl BEGIN1 func_stmt END .

    $default  reduce using rule 11 (func_defn)


State 96

   12 func_stmt: stmt func_stmt .

    $default  reduce using rule 12 (func_stmt)


State 97

   53 id_list: ID COMMA id_list .

    $default  reduce using rule 53 (id_list)


State 98

    5 func_decl: datatype ID LP opt_arg_list . RP

    RP  shift, and go to state 108


State 99

    6 opt_arg_list: arg_list .

    $default  reduce using rule 6 (opt_arg_list)


State 100

    8 arg_list: arg . COMMA arg_list
    9         | arg .

    COMMA  shift, and go to state 109

    $default  reduce using rule 9 (arg_list)


State 101

   10 arg: datatype . ID

    ID  shift, and go to state 110


State 102

   28 else_stmt: ELSE . stmt_list

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    BEGIN1  shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    CIN     shift, and go to state 7
    COUT    shift, and go to state 8
    ID      shift, and go to state 9

    stmt_list  go to state 111
    stmt       go to state 29
    var_decl   go to state 14
    datatype   go to state 31
    func_call  go to state 16
    io         go to state 17


State 103

   20 stmt: IF expr THEN stmt opt_else .

    $default  reduce using rule 20 (stmt)


State 104

   26 opt_else: else_stmt .

    $default  reduce using rule 26 (opt_else)


State 105

   61 expr_list: expr COMMA expr_list .

    $default  reduce using rule 61 (expr_list)


State 106

   19 stmt: ID colon ASSIGN expr semi .

    $default  reduce using rule 19 (stmt)


State 107

   13 func_stmt: RETURN rt semi .

    $default  reduce using rule 13 (func_stmt)


State 108

    5 func_decl: datatype ID LP opt_arg_list RP .

    $default  reduce using rule 5 (func_decl)


State 109

    8 arg_list: arg COMMA . arg_list

    INT   shift, and go to state 4
    BOOL  shift, and go to state 5
    CHAR  shift, and go to state 6

    arg_list  go to state 112
    arg       go to state 100
    datatype  go to state 101


State 110

   10 arg: datatype ID .

    $default  reduce using rule 10 (arg)


State 111

   28 else_stmt: ELSE stmt_list .

    $default  reduce using rule 28 (else_stmt)


State 112

    8 arg_list: arg COMMA arg_list .

    $default  reduce using rule 8 (arg_list)
